#!/bin/bash

source uts.global.shi;
$(uts.return_if_read);

uts.source uts.base0.shi

uts.val?()
{
    local val=$1;
	uts.whitepace $val && uts.err "$(uts.callingfn): arg value passed to <$(uts.thisfn)> contains whitespace <$val>\n" && uts.abort;
    uts.yield $val;
}

uts.val()
{
	local val=$1
	local caller=$(uts.callingfn);

    ! uts.isval $val && uts.err "$(uts.callingfn): null arg value passed to <$(uts.thisfn)>\n" && uts.abort;
    uts.val? $val;
}

uts.vals?()
{
	for i in "$@"; do uts.none uts.val $i; done
	uts.yield "$@";
}

uts.vals() { uts.vals "$@"; } # TBD - force non null?

uts.ref?()
{
	local ref=$(uts.val? $1);
    ! uts.null $ref && ! uts.isref $ref && uts.err "$(uts.callingfn): arg value passed to <$(uts.thisfn)> is not a 'ref' (a declared var) <$ref>\n" && uts.abort;
	uts.yield $ref;
}

uts.ref()
{
    local ref=$(uts.val $1);
    uts.ref? $ref;
}

uts.int?()
{
	local ival=$(uts.val? $1);
    ! uts.null $ival && ! uts.isint $ival && uts.err "$(uts.callingfn): arg value passed to <$(uts.thisfn)> is not an 'int' <$ival>\n" && uts.abort;
	uts.yield $ival;
}

uts.int()
{
    local ival=$(uts.val $1);
    uts.int? $ival;
}

uts.assert()
{
    eval "$@";
    ! $? && uts.err "$(uts.caller) - $(uts.thisfn) -assertion fail (assering $(uts.ab $@))" && uts.abort;
}
