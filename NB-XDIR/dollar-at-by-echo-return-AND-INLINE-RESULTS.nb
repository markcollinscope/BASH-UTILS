# THIS WORKS - Shows using echo return with 'eval' - can enable processing of "$@" in a fn call, without passing "$@"

RESFILE=/tmp/res

rmresults() { rm -f $RESFILE; }
rmresults;

results() 
{ 
	cat $RESFILE | sed 's/^/#/g'; 
	rmresults; 
}

err() { echo $* >> $RESFILE; }
err
err

err START-------------------------------------------------

_nargs.lessthan()
{
	err "_nargs ($1, $#) : is $1 less than $# after shift..."

	local n=$1;
	err "_nargs: n($n)"
	shift;

	err "_nargs: #($#)"

	if test $# -gt $n ; then
		err "_nargs: NO ERROR NOT LESS THAN - arg count <$#> is more than <$n>";
		return 1;
	else
		err "_nargs: YES OK IS LESS THAN - arg count ok <$#> is less than <$n>";
		return 0;
	fi
}

nargs.lessthan()
{
	echo 'eval _nargs.lessthan "$@"'
}


lessthan()
{
	err 
	err
	err lessthan:  $*
	$(nargs.lessthan);
}

lessthan 1 2 3 4 5 
results
# inline read results here.

lessthan 6 1 2 3 4 
results;
# read results here.

lessthan 1
results;
# read results here.
